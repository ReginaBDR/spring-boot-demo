plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.goal'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

defaultTasks "bootRun"

springBoot {
	mainClass = "com.goal.demo.DemoApplication"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	implementation "com.zaxxer:HikariCP"
	testImplementation 'org.assertj:assertj-core:3.22.0'
	testImplementation "org.testcontainers:junit-jupiter"
	testImplementation "org.testcontainers:testcontainers"
	testImplementation "org.testcontainers:jdbc"
	testImplementation "org.springframework.boot:spring-boot-test"
	testImplementation "org.springframework.security:spring-security-test"
}

tasks.named('test') {
	useJUnitPlatform()
}

test {
	useJUnitPlatform()
	testLogging {
		events 'FAILED', 'SKIPPED'
	}
	jvmArgs += '-Djava.security.egd=file:/dev/./urandom -Xmx512m'
	reports.html.required = false
}

task testReport(type: TestReport) {
	destinationDirectory = file("$buildDir/reports/tests")
	testResults.from(test)
}
